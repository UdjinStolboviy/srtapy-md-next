npm cache clean -f

npx create-next-app --ts

npm run dev

npx sb init --builder webpack5

npm run storybook   

http://localhost:6006/?path=/story/button--basic-button

npm install --save-dev eslint-plugin-prettier

npm i @emotion/react @emotion/styled -S

npm install --save-dev jest @testing-library/react @testing-library/jest-dom

npm install -D jest-environment-jsdom

npm i @testing-library/user-event -D

npm i tsconfig-paths-webpack-plugin -D

npm i -D @storybook/addon-interactions  @storybook/jest @storybook/testing-library

npm i @storybook/addon-a11y -D

npm i --save-dev chromatic

npx chromatic --project-token=86fb34284057

npx create-strapi-app@latest backend

npx npm-check-updates
npx npm-check-updates -u

npm i msw -D

npm i node-fetch -D

npm i react-redux -S

npm run lint && npm test



npm test -- -u  (коли падають тести треба обновити цією командою)
npm run build
npm run build-storybook

npx npm-check-updates


docker run -d -p 1337:1337 story-fish:latest


admin.js
module.exports = ({ env }) => ({
  apiToken: {
    salt: env("API_TOKEN_SALT", "my-salt"),
  },
  auth: {
    secret: env("ADMIN_JWT_SECRET", "Pcqj65jg9uqQ7lznz3Gwrg=="),
  },
});

NEXT_PUBLIC_STRAPI_API_URL=http://localhost:1337/api
NEXT_PUBLIC_STRAPI_URL=http://localhost:1337

ifconfig - показати api

Installation
pkg update & pkg upgrade
pkg install mariadb
Run mariadb daemon
mysqld
Or use this

mysqld_safe
Create new user and password
mysql
use mysql;
set password for 'new_user'@'localhost' = password('YOUR_ROOT_PASSWORD_HERE');
flush privileges;
quit;
Login with new user
mysql -u new_user -p
And then input your password.

mysqld --skip-grant-tables --general-log

http://localhost:8080/
cd ..
cd usr/share
ls
pwd
cd phpmyadmin
php -S localhost:8080

vi
i
:wa!
:qa!


SHOW DATABASES;
USE mysql;
SHOW TABLES;
SELECT * FROM user;
SELECT User FROM user;
CREATE USER 'strapi'@localhost IDENTIFIED BY 'strapi';
GRANT ALL PRIVILEGES ON *.* TO 'strapi'@localhost IDENTIFIED BY 'strapi';
FLUSH PRIVILEGES;
SHOW GRANTS FOR 'strapi'@localhost;
DROP USER 'user1'@localhost;
exit
mysql
create database strapi;
show databases;
use strapi;
show tables;
create table tblstudents(
  studentno varchar(20) not null,
  lastname varchar(50) not null,
  firstname varchar(50) not null,
  primary key(studentno)
  );

desc tblstudents;



pkg install libvips

npm rebuild

sudo npm cache clean -f
sudo npm install -g n
sudo n stable


npm install --arch=x64 --platform=linux --target=16x sharp


Спочатку нам потрібно знати IP-адресу комп’ютера, на якому розміщено веб-сайт (той, над яким ми працювали з самого початку). У терміналі на MAC і LINUX типу ifconfig |grep inet, на WINDOWSтипі ipconfig.

Note! Every time you use mysql in termux, the mariadb daemon must be activated first

This is typically due to some outdated cached packages

Please delete the following files and folders:

.cache
build
node_modules
package-lock.json
yarn.lock


docker ps
docker exec -it backend-mariadb-1 mysql -u root -p
docker inspect backend-mariadb-1

docker exec -it your_container_name_or_id bash



Then reinstall your node_modules with npm i or yarn install and rebuild the admin with NODE_ENV=production yarn 
build or NODE_ENV=production npm run build